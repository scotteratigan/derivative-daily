let chai = require('chai');
let chaiHttp = require('chai-http');
let server = require('../server');
let db = require('../models');

let expect = chai.expect;

// Setting up the chai http plugin
chai.use(chaiHttp);

let request;

describe('POST /api/examples', () => {
	// Before each test begins, create a new request server for testing
	// & delete all examples from the db
	beforeEach(function () {
		request = chai.request(server);
		return // db.sequelize.sync({ force: true });
	});

	it("should save an example", function (done) {
		// Create an object to send to the endpoint
		var reqBody = {
			text: "Example text",
			description: "Example description"
		};

		// POST the request body to the server
		request
			.post("/api/examples")
			.send(reqBody)
			.end(function (err, res) {
				var responseStatus = res.status;
				var responseBody = res.body;

				// Run assertions on the response

				expect(err).to.be.null;

				expect(responseStatus).to.equal(200);

				expect(responseBody)
					.to.be.an("object")
					.that.includes(reqBody);

				// The `done` function is used to end any asynchronous tests
				done();
			});
	});
});
